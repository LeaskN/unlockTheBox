{"ast":null,"code":"var _jsxFileName = \"/Users/Nic/Desktop/Development/unlock-the-box/src/components/Locktwo/Stopwatch.js\";\nimport React from 'react';\nimport './Stopwatch.css'; //mport timerStore from \"../../stores/TimerStore\";\n\nclass Stopwatch extends React.Component {\n  // set state\n  constructor(props) {\n    super(props);\n\n    this.startTimer = () => {\n      this.setState({\n        timerOn: true,\n        timerTime: this.state.timerTime,\n        timerStart: Date.now() - this.state.timerTime\n      });\n      this.timer = setInterval(() => {\n        this.setState({\n          timerTime: Date.now() - this.state.timerStart\n        });\n      }, 10);\n    };\n\n    this.stopTimer = () => {\n      this.setState({\n        timerOn: false\n      });\n      clearInterval(this.timer);\n      this.props.onTimerFinish();\n      console.log(this.props);\n    };\n\n    this.state = {\n      timerOn: false,\n      timerStart: 0,\n      timerTime: 0\n    };\n  } // Start timer at 0\n\n\n  // as soon as page loads, timer will start \n  // once 1 min has passed, run stopTimer function\n  componentDidMount() {\n    this.startTimer();\n    setTimeout(() => this.stopTimer(), 30000);\n  }\n\n  render() {\n    const {\n      timerTime\n    } = this.state; // const { timerTime, timerOn } = this.timerStore.getState();\n    // Vars to measure time\n\n    let centiseconds = (\"0\" + Math.floor(timerTime / 10) % 100).slice(-2);\n    let seconds = (\"0\" + Math.floor(timerTime / 1000) % 60).slice(-2);\n    let minutes = (\"0\" + Math.floor(timerTime / 60000) % 60).slice(-2);\n    let hours = (\"0\" + Math.floor(timerTime / 3600000)).slice(-2);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Stopwatch\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Stopwatch-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, \"Time Passed\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Stopwatch-display\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, hours, \" : \", minutes, \" : \", seconds, \" : \", centiseconds), this.state.timerOn === false && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, \"Time is up!\"));\n  }\n\n}\n\nexport default Stopwatch;","map":{"version":3,"sources":["/Users/Nic/Desktop/Development/unlock-the-box/src/components/Locktwo/Stopwatch.js"],"names":["React","Stopwatch","Component","constructor","props","startTimer","setState","timerOn","timerTime","state","timerStart","Date","now","timer","setInterval","stopTimer","clearInterval","onTimerFinish","console","log","componentDidMount","setTimeout","render","centiseconds","Math","floor","slice","seconds","minutes","hours"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP,C,CACA;;AAEA,MAAMC,SAAN,SAAwBD,KAAK,CAACE,SAA9B,CAAwC;AACpC;AACAC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAUnBC,UAVmB,GAUN,MAAM;AACf,WAAKC,QAAL,CAAc;AACVC,QAAAA,OAAO,EAAE,IADC;AAEVC,QAAAA,SAAS,EAAE,KAAKC,KAAL,CAAWD,SAFZ;AAGVE,QAAAA,UAAU,EAAEC,IAAI,CAACC,GAAL,KAAa,KAAKH,KAAL,CAAWD;AAH1B,OAAd;AAKA,WAAKK,KAAL,GAAaC,WAAW,CAAC,MAAM;AAC3B,aAAKR,QAAL,CAAc;AACVE,UAAAA,SAAS,EAAEG,IAAI,CAACC,GAAL,KAAa,KAAKH,KAAL,CAAWC;AADzB,SAAd;AAGH,OAJuB,EAIrB,EAJqB,CAAxB;AAKH,KArBkB;;AAAA,SAuBnBK,SAvBmB,GAuBP,MAAM;AACd,WAAKT,QAAL,CAAc;AACVC,QAAAA,OAAO,EAAE;AADC,OAAd;AAGAS,MAAAA,aAAa,CAAC,KAAKH,KAAN,CAAb;AACA,WAAKT,KAAL,CAAWa,aAAX;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAjB;AAEH,KA/BkB;;AAEf,SAAKK,KAAL,GAAa;AACTF,MAAAA,OAAO,EAAE,KADA;AAETG,MAAAA,UAAU,EAAE,CAFH;AAGTF,MAAAA,SAAS,EAAE;AAHF,KAAb;AAKH,GATmC,CAWpC;;;AAwBA;AACA;AACAY,EAAAA,iBAAiB,GAAG;AAChB,SAAKf,UAAL;AACAgB,IAAAA,UAAU,CAAC,MAAM,KAAKN,SAAL,EAAP,EAAyB,KAAzB,CAAV;AACH;;AAEDO,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAEd,MAAAA;AAAF,QAAgB,KAAKC,KAA3B,CAFK,CAGN;AACC;;AACA,QAAIc,YAAY,GAAG,CAAC,MAAOC,IAAI,CAACC,KAAL,CAAWjB,SAAS,GAAG,EAAvB,IAA6B,GAArC,EAA2CkB,KAA3C,CAAiD,CAAC,CAAlD,CAAnB;AACA,QAAIC,OAAO,GAAG,CAAC,MAAOH,IAAI,CAACC,KAAL,CAAWjB,SAAS,GAAG,IAAvB,IAA+B,EAAvC,EAA4CkB,KAA5C,CAAkD,CAAC,CAAnD,CAAd;AACA,QAAIE,OAAO,GAAG,CAAC,MAAOJ,IAAI,CAACC,KAAL,CAAWjB,SAAS,GAAG,KAAvB,IAAgC,EAAxC,EAA6CkB,KAA7C,CAAmD,CAAC,CAApD,CAAd;AACA,QAAIG,KAAK,GAAG,CAAC,MAAML,IAAI,CAACC,KAAL,CAAWjB,SAAS,GAAG,OAAvB,CAAP,EAAwCkB,KAAxC,CAA8C,CAAC,CAA/C,CAAZ;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAII;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKG,KADL,SACeD,OADf,SAC2BD,OAD3B,SACuCJ,YADvC,CAJJ,EASK,KAAKd,KAAL,CAAWF,OAAX,KAAuB,KAAvB,iBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAVR,CADJ;AAoBH;;AAxEmC;;AA2ExC,eAAeN,SAAf","sourcesContent":["import React from 'react';\nimport './Stopwatch.css';\n//mport timerStore from \"../../stores/TimerStore\";\n\nclass Stopwatch extends React.Component {\n    // set state\n    constructor(props) {\n        super(props);\n        this.state = {\n            timerOn: false,\n            timerStart: 0,\n            timerTime: 0\n        };\n    }\n\n    // Start timer at 0\n    startTimer = () => {\n        this.setState({\n            timerOn: true,\n            timerTime: this.state.timerTime,\n            timerStart: Date.now() - this.state.timerTime\n        });\n        this.timer = setInterval(() => {\n            this.setState({\n                timerTime: Date.now() - this.state.timerStart\n            });\n        }, 10);\n    }\n\n    stopTimer = () => {\n        this.setState({\n            timerOn: false\n        });\n        clearInterval(this.timer);\n        this.props.onTimerFinish();\n        console.log(this.props);\n\n    }\n\n    // as soon as page loads, timer will start \n    // once 1 min has passed, run stopTimer function\n    componentDidMount() {\n        this.startTimer();\n        setTimeout(() => this.stopTimer(), 30000);\n    }\n\n    render() {\n\n        const { timerTime } = this.state;\n       // const { timerTime, timerOn } = this.timerStore.getState();\n        // Vars to measure time\n        let centiseconds = (\"0\" + (Math.floor(timerTime / 10) % 100)).slice(-2);\n        let seconds = (\"0\" + (Math.floor(timerTime / 1000) % 60)).slice(-2);\n        let minutes = (\"0\" + (Math.floor(timerTime / 60000) % 60)).slice(-2);\n        let hours = (\"0\" + Math.floor(timerTime / 3600000)).slice(-2);\n\n        return (\n            <div className=\"Stopwatch\">\n                <div className=\"Stopwatch-header\">\n                    Time Passed\n                </div>\n                <div className=\"Stopwatch-display\">\n                    {hours} : {minutes} : {seconds} : {centiseconds}\n                </div>\n\n                {/* Once timerOn state is set to false, times up message will populate */}\n                {this.state.timerOn === false && (\n                    <p>Time is up!</p>\n                )}\n\n                {/* Button to start timer, might need to use later */}\n                {/* {this.state.timerOn === false && this.state.timerTime === 0 && (\n                    <button onClick={this.startTimer}>Start</button>\n                )} */}\n            </div>\n        );\n    }\n}\n\nexport default Stopwatch;"]},"metadata":{},"sourceType":"module"}