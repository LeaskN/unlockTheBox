{"ast":null,"code":"var _jsxFileName = \"/Users/Nic/Desktop/Development/unlock-the-box/src/components/Lockone/Card.js\";\n// NOTE: Card is the parent component for Stopwatch\nimport React from 'react';\nimport './Card.css';\nimport Stopwatch from './Stopwatch';\nconst lockCombo = [\"2\", \"6\", \"7\"];\nconst success = [\"Success! You've opened lock number 1!\"];\nconst failure = [\"Please try again!\"];\n\nclass Card extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.checkAnswer = () => {\n      // create a var that takes the state (which will be relected by the user's input) and returns the values as an arr\n      const lockInputArr = Object.values(this.state.positions); // loop through the length of our arr\n\n      for (let i = 0; i < lockInputArr.length; i++) {\n        // if the index of our two arr are not equal, alert failure, reset state with this.reset(), and return false\n        if (lockInputArr[i] !== lockCombo[i]) {\n          // reset();\n          alert(failure);\n          return false;\n        }\n      } // otherwise just alert success and return true\n\n\n      alert(success);\n      return true;\n    };\n\n    this.disableInput = () => {\n      this.setState({\n        inputDisabled: true\n      }); // TODO Finish logic for disableInput function\n      // if (this.state.inputDisabled === true) {\n      // }\n    };\n\n    this.handleInputChange = e => {\n      const target = e.target;\n      const value = target.value;\n      const position = target.id;\n\n      if (position === \"1\") {\n        this.setState({\n          positions: { ...this.state.positions,\n            posOne: value\n          }\n        });\n      } else if (position === \"2\") {\n        this.setState({\n          positions: { ...this.state.positions,\n            posTwo: value\n          }\n        });\n      } else if (position === \"3\") {\n        this.setState({\n          positions: { ...this.state.positions,\n            posThree: value\n          }\n        });\n      }\n    };\n\n    this.state = {\n      positions: {\n        posOne: \"\",\n        posTwo: \"\",\n        posThree: \"\"\n      },\n      inputDisabled: false\n    };\n  } // func to check users input against lockCombo\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Stopwatch, {\n      onTimerFinish: this.disableInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"whole-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"bg-green dib br3 pa3 ma2 grow bw4 shadow-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    }, this.state.positions.posOne), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"bg-green dib br3 pa3 ma2 grow bw4 shadow-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    }, this.state.positions.posTwo), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"bg-green dib br3 pa3 ma2 grow bw4 shadow-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }, this.state.positions.posThree)), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      maxLength: \"1\",\n      className: \"bg-green dib br3 pa3 ma2 grow bw2 shadow-5\",\n      id: \"1\",\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      maxLength: \"1\",\n      className: \"bg-green dib br3 pa3 ma2 grow bw2 shadow-5\",\n      id: \"2\",\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      maxLength: \"1\",\n      className: \"bg-green dib br3 pa3 ma2 grow bw2 shadow-5\",\n      id: \"3\",\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"bg-green dib br3 pa3 ma2 bw1 shadow-5 spin-button\",\n      variant: \"secondary\",\n      type: \"submit\",\n      onClick: this.checkAnswer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    }, \"Unlock\"))));\n  }\n\n}\n\nexport default Card;","map":{"version":3,"sources":["/Users/Nic/Desktop/Development/unlock-the-box/src/components/Lockone/Card.js"],"names":["React","Stopwatch","lockCombo","success","failure","Card","Component","constructor","props","checkAnswer","lockInputArr","Object","values","state","positions","i","length","alert","disableInput","setState","inputDisabled","handleInputChange","e","target","value","position","id","posOne","posTwo","posThree","render"],"mappings":"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","sourcesContent":["// NOTE: Card is the parent component for Stopwatch\nimport React from 'react';\nimport './Card.css';\nimport Stopwatch from './Stopwatch';\n\nconst lockCombo = [\"2\", \"6\", \"7\"];\nconst success = [\"Success! You've opened lock number 1!\"];\nconst failure = [\"Please try again!\"];\n\nclass Card extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            positions: {\n                posOne: \"\",\n                posTwo: \"\",\n                posThree: \"\"\n            },\n            inputDisabled: false\n        }\n    }\n\n    // func to check users input against lockCombo\n    checkAnswer = () => {\n        // create a var that takes the state (which will be relected by the user's input) and returns the values as an arr\n        const lockInputArr = Object.values(this.state.positions);\n        \n        // loop through the length of our arr\n        for (let i = 0; i < lockInputArr.length; i++) { \n            // if the index of our two arr are not equal, alert failure, reset state with this.reset(), and return false\n            if(lockInputArr[i] !== lockCombo[i]) {\n                // reset();\n                alert(failure);\n                return false;\n            }\n        }\n        // otherwise just alert success and return true\n        alert(success);\n        return true;\n    }\n\n    disableInput = () => {\n        this.setState({\n            inputDisabled: true\n        });\n\n        // TODO Finish logic for disableInput function\n        // if (this.state.inputDisabled === true) {\n            \n        // }\n    }\n\n    // func to reset state to empty strings\n    // reset = () => {\n    //     this.setState({\n    //         positions: {\n    //             posOne: \"\"\n    //         }\n    //     });\n    //     this.setState({\n    //         positions: {\n    //             posTwo: \"\"\n    //         }\n    //     });\n    //     this.setState({\n    //         positions: {\n    //             posThree: \"\"\n    //         }\n    //     });\n    // }\n\n    // func to handle user input and change state to user input value\n    handleInputChange = (e) => {\n        const target = e.target;\n        const value = target.value;\n        const position = target.id;\n        if (position === \"1\") {\n            this.setState({\n                positions:{\n                    ...this.state.positions, \n                    posOne: value\n                }\n            });\n        } else if (position === \"2\") {\n            this.setState({\n                positions: {\n                    ...this.state.positions,\n                    posTwo: value\n                }   \n            });\n        } else if (position === \"3\") {\n            this.setState({\n                positions: {\n                    ...this.state.positions,\n                    posThree: value\n                }\n            });\n        }\n    }\n\n    render() {\n        return(\n           <div>\n                {/* Stopwatch child component */}\n                <Stopwatch onTimerFinish={this.disableInput} />\n                <div className=\"whole-card\">\n                    {/* positions to be populated upon user input */}\n                    <div>\n                        <span className=\"bg-green dib br3 pa3 ma2 grow bw4 shadow-5\">{this.state.positions.posOne}</span>\n                        <span className=\"bg-green dib br3 pa3 ma2 grow bw4 shadow-5\">{this.state.positions.posTwo}</span>\n                        <span className=\"bg-green dib br3 pa3 ma2 grow bw4 shadow-5\">{this.state.positions.posThree}</span>\n                    </div>\n                    <br />\n                    {/* form to capture user inputs */}\n                    <form>\n                        <input type=\"text\" maxLength=\"1\" className=\"bg-green dib br3 pa3 ma2 grow bw2 shadow-5\" id=\"1\" onChange={this.handleInputChange}></input>\n                        <input type=\"text\" maxLength=\"1\" className=\"bg-green dib br3 pa3 ma2 grow bw2 shadow-5\" id=\"2\" onChange={this.handleInputChange}></input>\n                        <input type=\"text\" maxLength=\"1\" className=\"bg-green dib br3 pa3 ma2 grow bw2 shadow-5\" id=\"3\" onChange={this.handleInputChange}></input>\n                    </form>\n                    {/* Unlock button that runs checkAnswer func onClick*/}\n                    <div>\n                        <button className=\"bg-green dib br3 pa3 ma2 bw1 shadow-5 spin-button\" variant=\"secondary\" type=\"submit\" onClick={this.checkAnswer}>Unlock</button>\n                    </div>\n                </div>\n           </div>\n        );\n    }\n}\n\nexport default Card;"]},"metadata":{},"sourceType":"module"}